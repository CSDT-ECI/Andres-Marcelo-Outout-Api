buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'outout'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile("javax.servlet:javax.servlet-api:3.1.0")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile 'io.jsonwebtoken:jjwt:0.5.1'
    compile 'joda-time:joda-time:2.3'
    runtime("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit:4.12")
    testCompile("org.hamcrest:hamcrest-all:1.3")
    testCompile("org.apache.tomcat:tomcat-catalina:8.0.24")
    testCompile("org.apache.commons:commons-dbcp2:2.1.1")
    testCompile("org.exparity:hamcrest-date:1.1.0")

}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task integrationTest(type: Test, dependsOn: testClasses) {
    include '**/IntegrationTestSuite.class'
    reports.junitXml.destination = "$buildDir/test-results/IntegrationTestSuite"
    reports.html.destination = "$buildDir/test-results/IntegrationTestSuite"
}
